@model IList<BookViewModel>
@{
    ViewData["Title"] = "GetBasket";
    decimal totalPrice = 0;  
}

<div class="container-fluid">
    @if (Model is not null && Model.Any())
    {
        Model.Aggregate(totalPrice, (acc, book) => totalPrice += book.Price);
        var books = Json.Serialize(Model.Select(x=>x));
        <p>Товары:</p>
        <ul class="list-group">
            @foreach (var book in Model)
            {
                <li class="list-group-item">
                    <div class="row">
                        <div class="col-md-1">
                            <img src="~/img/@book.ImagePath" width="80" />
                        </div>
                        <div class="col-md-10">
                            <h6>Название: @book.Title</h6>
                            <p>Цена: @book.Price Руб.</p>
                        </div>
                        <div class="col-md-1">
                            <a asp-controller="Basket" asp-action="DeleteFromBasket" asp-route-bookId="@book.Id" class="btn btn-outline-danger">X</a>
                        </div>
                    </div>
                </li>
            }
        </ul>
        <div class="container">
            <p>Общая стоимость заказа:</p>
            <h2>@totalPrice Руб.</h2>
            <span>
                <a class="btn btn-outline-success btn-lg" onclick="createOrder('@books.ToString()')">Оформить заказ</a>
            </span>
        </div>
        <br />
    }
    else
    {
        <h3>Пока корзина пуста</h3>
    }
</div>

